import Head from 'next/head'
import { useState, useEffect } from 'react'
import React from 'react'
import fetchWeather from './api/fetchWeather'

import fetchNews from './api/fetchNews'
import styles from "./index.module.scss"
import iconn from '../assets/icons/business-icon.svg'
import Image from 'next/image'
import BaseLayout from '../layouts/baselayout'
import { AppContext } from '../layouts/baselayout'
import { useContext } from 'react'
import AOS from 'aos';
import 'aos/dist/aos.css';

function Home() {

  const  appContext = useContext(AppContext);



  

  const dateObj = new Date();
  const [query, setQuery]= useState(appContext.state.newsApiQuery);
  const [weather, setWeather] = useState({status: 'd', results: []})
  const [news, setNews] = useState({status: 'd', query: query})
  const [date, setDate] = useState(Date)
  const [icon, setIcon] = React.useState("")



  



  
  const getWeather = async (e) =>{
    
    const data = await fetchWeather('lagos');
    data.weather ? setWeather({...data},)  
    : setWeather({
        ...weather,
        error: "can't fetch weather infomation check network connection and city name"
      })
      
      
    
  }


  const getNews = async () =>{
    console.log('query', query)
   
      const data = await fetchNews(query);
      
      data.status === 'OK' ? setNews({
          ...data,
        })  : setNews({
          status: '',
          error: "can't fetch News check network connection"
        })


    
        
      
      
    
  }

 

 
  useEffect(()=>{
    
    // weather.description ? setIcon(`https://openweathermap.org/img/wn/${weather.icon}@2x.png`) : setIcon("");
    AOS.init();
    getWeather();
    
    
    getNews()
    
    console.log('news',news)
    setQuery(appContext.state.newsApiQuery)
    // console.log('weather', weather.results)
  },[appContext.state.newsApiQuery, query, news.status])

  

  
  return (
    <>

      <div className={styles.index}>
      <Head>
        <title>Weather</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      
      
      
      
        {
          news.response? 
            <div className={styles.news_container} data-aos="fade-up">
              {/* {query} */}
              {news.response.docs.map((article, index)=> {
                return (
                
                  <div className={styles.news_card  + ' animate__animated animate__bounceInUp'} key={index} style={{
                    color:'white'
                  }}>
                    <h3>{article.headline.main}</h3>
                    <p>{article.abstract}</p>
                    <a target={'_blank'} href={article.web_url} rel="noreferrer">read more</a>
                  </div>
                )
              })}
            </div>
          :
          <div className={styles.news_container}>
            <p>{news.error? news.error : 'loading...'}</p>
          </div>
        }


      {
        weather.weather?

          <div className={styles.weatherCard}>
            <div className={styles.heading}>
              <p className={styles.city}>
                {weather.name}
                
              </p>

              <p className={styles.country}>{weather.sys.country}</p>
            </div>
            
            <div>
              <p className={styles.description}>
                {weather.weather[0].description}
              </p>
              <p className={styles.temp} >
                {Math.round(weather.main.temp)  }
                <sup> &deg;C</sup>
                
              </p>
            </div>
            
            
            

          
          </div>
        : <div className={styles.weatherCard}>
            <p>
              {weather.error? weather.error : 'loading...'}
            </p> 
          </div>
      }






      
      

      
      </div>

    
    
    </>

    
  )
}

const Container = ()=>{
  return(
    <BaseLayout page={<Home/>}></BaseLayout>
  )
}

export default Container

{/* <label>Enter a city</label>
      <input type={"text"} className="search" 
        placeholder='search...'
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        onKeyPress={search}
      />


      <div className={styles.weatherCard}>
        
        <svg>{icon}</svg>
        <div>kk</div>
        <div><Image src={iconn} alt=''/></div>
        <img src={iconn}/>
        <svg width="24" height="24"  viewBox="0 0 24 24" focusable="false" className="icon"><path d={path}></path></svg>
        <div>
          <p className={styles.city}>
            {weather.name}
          </p>

          <p className={styles.country}>{weather.country}</p>
        </div>
        
        <p className={styles.date} style={{
          color: "black"
        }}>
          {date}
        </p>
        <p className={styles.temp} style={{
          display: weather.temp? "flex": "none",
          ...styles
          
        }} >
          {Math.round(weather.temp)  }
          <sup> &deg;C</sup>
          
        </p>

        
        <img src={iconn} alt=""/>

        
        <p className={styles.description}>
          {weather.description}
        </p>

        <p className={styles.error}>{weather.error}</p>
      
      </div> */}
