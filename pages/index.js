import Head from "next/head";
import Image from "next/image";
import { useState, useEffect, useContext } from "react";
import React from "react";
import fetchWeather from "./api/fetchWeather";

import fetchNews from "./api/fetchNews";
import styles from "../styles/index.module.scss";
import BaseLayout from "../layouts/baselayout";
import { AppContext } from "../layouts/baselayout";
import AOS from "aos";
import "aos/dist/aos.css";
import { useRef } from "react";
import { ErrorBoundary } from "react-error-boundary";
import { Suspense } from "react";

import loadingIco from "../assets/img/loadingIco.png";

import Twitter from "../components/Twitter";
import NewsCard from "../components/NewsCard";
import sadFace from '../assets/img/sad_face.png'

function Home() {
  const appContext = useContext(AppContext);

  let query = appContext.state.newsApiQuery;
  const [twitter, setTwitter] = useState(appContext.state.newsApiQuery.twitter);
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [news, setNews] = useState({
    status: "jn",
    query: query,
    response: {
     
    },

  });

  const getNews = async () => {
    setLoading(true);
    const result = await fetchNews(query.query);
    console.log('result', result)
    setNews(result.status == 'OK' ? result : {
      ...news,
      error: "Opps check Network Connection",
    })
    setTimeout(() => {
      setLoading(false);
    }, 2000);
    
    
  };

  useEffect(() => {
    AOS.init();
    getNews();
    console.log("rendering", news);
    setTwitter(appContext.state.newsApiQuery.twitter);
  }, [appContext.state.newsApiQuery.query]);

  return (
    <>
      <Head>
        <title>News</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={styles.index}
        onClick={() => appContext.setShowMenu(false)}
      >
        {loading ? (
          <div className={styles.loading_container}>
            <div className={styles.loading}>
              <Image src={loadingIco} alt="" />
            </div>
          </div>
          
        ) : null}

        {news.error && !loading ? 
        <div className={styles.error_container}>
            <div><Image src={sadFace} width={150} height={120} alt=''/></div>          
         
          <p>{news.error} 
            <span className={styles.reload} onClick={() => getNews()}>
              reload
            </span>
          </p>
          
          </div> : null
        }
        
        { news.response.docs ? (
          <>
            <div className={styles.news_container}>
              {news.response.docs.map((article, index) => {
                  return (
                    <NewsCard
                      key={index}
                      headline={article.headline.main}
                      abstract={article.abstract}
                      multimedia={article.multimedia}
                      leadParagraph={article.lead_paragraph}
                      url={article.web_url}
                    />
                  );
                })
              }
             
            </div>

            <div className={styles.container_2}>
              <Twitter
                url={"https://twitter.com/" + twitter + "?ref_src=twsrc%5Etfw"}
              />
            </div>
          </>
          
        ) : null}
        
      </div>
    </>
  );
}

const Container = () => {
  return (
    <BaseLayout >
      <Home/>
    </BaseLayout>
  );
};

export default Container;
